Search.setIndex({"alltitles": {"Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Modules": [[3, "modules"]], "Welcome to repoclass\u2019s documentation!": [[0, "welcome-to-repoclass-s-documentation"]], "learning_model.py": [[1, "learning-model-py"]], "model_api.py": [[2, "model-api-py"]], "nlp_embedding.py": [[4, "nlp-embedding-py"]], "sentiment.py": [[5, "sentiment-py"]], "set_logger.py": [[6, "set-logger-py"]], "test_codes.py": [[7, "test-codes-py"]]}, "docnames": ["index", "learning_model", "model_api", "modules", "nlp_embedding", "sentiment", "set_logger", "test_codes"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["index.rst", "learning_model.rst", "model_api.rst", "modules.rst", "nlp_embedding.rst", "sentiment.rst", "set_logger.rst", "test_codes.rst"], "indexentries": {"_compute_total_metrics() (learning_model.categoricneuralnetwork method)": [[1, "learning_model.CategoricNeuralNetwork._compute_total_metrics", false]], "_configure_input() (learning_model.categoricneuralnetwork method)": [[1, "learning_model.CategoricNeuralNetwork._configure_input", false]], "_configure_output() (learning_model.categoricneuralnetwork method)": [[1, "learning_model.CategoricNeuralNetwork._configure_output", false]], "_device (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork._device", false]], "_get_batch_loss() (learning_model.categoricneuralnetwork method)": [[1, "learning_model.CategoricNeuralNetwork._get_batch_loss", false]], "_get_multi_one_hot() (learning_model.categoricneuralnetwork method)": [[1, "learning_model.CategoricNeuralNetwork._get_multi_one_hot", false]], "_get_performance() (learning_model.categoricneuralnetwork method)": [[1, "learning_model.CategoricNeuralNetwork._get_performance", false]], "_initialize_weights() (learning_model.categoricneuralnetwork method)": [[1, "learning_model.CategoricNeuralNetwork._initialize_weights", false]], "_input_size (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork._input_size", false]], "_nlp_embedding_model (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork._nlp_embedding_model", false]], "_nlp_model_name (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork._nlp_model_name", false]], "_output_category_embeddings_nlp (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork._output_category_embeddings_nlp", false]], "_output_size (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork._output_size", false]], "_process_batch_to_embedding() (learning_model.categoricneuralnetwork method)": [[1, "learning_model.CategoricNeuralNetwork._process_batch_to_embedding", false]], "_process_batch_to_one_hot() (learning_model.categoricneuralnetwork method)": [[1, "learning_model.CategoricNeuralNetwork._process_batch_to_one_hot", false]], "_similarity_threshold (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork._similarity_threshold", false]], "_train_nlp_embedding (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork._train_nlp_embedding", false]], "_use_input_embedding (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork._use_input_embedding", false]], "_use_output_embedding (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork._use_output_embedding", false]], "add_layer() (learning_model.categoricneuralnetwork method)": [[1, "id0", false], [1, "learning_model.CategoricNeuralNetwork.add_layer", false]], "assess_device() (learning_model.categoricneuralnetwork static method)": [[1, "learning_model.CategoricNeuralNetwork.assess_device", false]], "batch_size (model_api.configrun attribute)": [[2, "id0", false], [2, "model_api.ConfigRun.batch_size", false]], "build_and_train_model() (model_api.modelapi method)": [[2, "model_api.ModelApi.build_and_train_model", false]], "build_neural_network() (learning_model.categoricneuralnetwork method)": [[1, "id1", false], [1, "learning_model.CategoricNeuralNetwork.build_neural_network", false]], "case_name (model_api.configrun attribute)": [[2, "id1", false], [2, "model_api.ConfigRun.case_name", false]], "categoricneuralnetwork (class in learning_model)": [[1, "learning_model.CategoricNeuralNetwork", false]], "category_mappings (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork.category_mappings", false]], "configrun (class in model_api)": [[2, "model_api.ConfigRun", false]], "configure_dataset() (model_api.modelapi method)": [[2, "model_api.ModelApi.configure_dataset", false]], "configure_default_loggers() (model_api.modelapi method)": [[2, "model_api.ModelApi.configure_default_loggers", false]], "cos (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork.cos", false]], "create_model() (model_api.modelapi method)": [[2, "model_api.ModelApi.create_model", false]], "device (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork.device", false]], "device (learning_model.categoricneuralnetwork property)": [[1, "id2", false]], "device (nlp_embedding.nlpembedding attribute)": [[4, "nlp_embedding.NlpEmbedding.device", false]], "device (nlp_embedding.nlpembedding property)": [[4, "id0", false]], "embedding_model (nlp_embedding.nlpembedding attribute)": [[4, "nlp_embedding.NlpEmbedding.embedding_model", false]], "epochs (model_api.configrun attribute)": [[2, "id2", false], [2, "model_api.ConfigRun.epochs", false]], "evaluate() (learning_model.categoricneuralnetwork method)": [[1, "id3", false], [1, "learning_model.CategoricNeuralNetwork.evaluate", false]], "execute() (learning_model.categoricneuralnetwork method)": [[1, "id4", false], [1, "learning_model.CategoricNeuralNetwork.execute", false]], "forward() (learning_model.categoricneuralnetwork method)": [[1, "id5", false], [1, "learning_model.CategoricNeuralNetwork.forward", false]], "from_dict() (model_api.configrun class method)": [[2, "model_api.ConfigRun.from_dict", false]], "get_data() (in module test_codes.sentiment)": [[5, "test_codes.sentiment.get_data", false]], "get_dataloaders() (model_api.modelapi method)": [[2, "model_api.ModelApi.get_dataloaders", false]], "get_embedding() (nlp_embedding.nlpembedding method)": [[4, "nlp_embedding.NlpEmbedding.get_embedding", false]], "get_loss_fn() (model_api.modelapi method)": [[2, "model_api.ModelApi.get_loss_fn", false]], "get_optimizer() (model_api.modelapi method)": [[2, "model_api.ModelApi.get_optimizer", false]], "get_scheduler() (model_api.modelapi method)": [[2, "model_api.ModelApi.get_scheduler", false]], "hidden_layers (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork.hidden_layers", false]], "hidden_layers (model_api.configrun attribute)": [[2, "id3", false], [2, "model_api.ConfigRun.hidden_layers", false]], "input_categories (learning_model.categoricneuralnetwork property)": [[1, "learning_model.CategoricNeuralNetwork.input_categories", false]], "input_order (learning_model.categoricneuralnetwork property)": [[1, "learning_model.CategoricNeuralNetwork.input_order", false]], "learning_model": [[1, "module-learning_model", false]], "learning_rate (model_api.configrun attribute)": [[2, "id4", false], [2, "model_api.ConfigRun.learning_rate", false]], "linear_relu_stack (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork.linear_relu_stack", false]], "load_model() (model_api.modelapi method)": [[2, "model_api.ModelApi.load_model", false]], "lr_decay_factor (model_api.configrun attribute)": [[2, "id5", false], [2, "model_api.ConfigRun.lr_decay_factor", false]], "lr_decay_patience (model_api.configrun attribute)": [[2, "id6", false], [2, "model_api.ConfigRun.lr_decay_patience", false]], "lr_decay_step (model_api.configrun attribute)": [[2, "id7", false], [2, "model_api.ConfigRun.lr_decay_step", false]], "lr_decay_target (model_api.configrun attribute)": [[2, "id8", false], [2, "model_api.ConfigRun.lr_decay_target", false]], "main() (in module test_codes.sentiment)": [[5, "test_codes.sentiment.main", false]], "max_hidden_neurons (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork.max_hidden_neurons", false]], "max_hidden_neurons (model_api.configrun attribute)": [[2, "id9", false], [2, "model_api.ConfigRun.max_hidden_neurons", false]], "model_api": [[2, "module-model_api", false]], "model_trains_nlp_embedding (model_api.configrun attribute)": [[2, "id10", false], [2, "model_api.ConfigRun.model_trains_nlp_embedding", false]], "model_uses_input_embedding (model_api.configrun attribute)": [[2, "id11", false], [2, "model_api.ConfigRun.model_uses_input_embedding", false]], "model_uses_output_embedding (model_api.configrun attribute)": [[2, "id12", false], [2, "model_api.ConfigRun.model_uses_output_embedding", false]], "modelapi (class in model_api)": [[2, "model_api.ModelApi", false]], "module": [[1, "module-learning_model", false], [2, "module-model_api", false], [4, "module-nlp_embedding", false], [5, "module-test_codes.sentiment", false]], "nlp_embedding": [[4, "module-nlp_embedding", false]], "nlp_model_name (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork.nlp_model_name", false]], "nlp_model_name (model_api.configrun attribute)": [[2, "id13", false], [2, "model_api.ConfigRun.nlp_model_name", false]], "nlpembedding (class in nlp_embedding)": [[4, "nlp_embedding.NlpEmbedding", false]], "none (model_api.modelapi attribute)": [[2, "model_api.ModelApi.None", false]], "none() (model_api.configrun method)": [[2, "model_api.ConfigRun.None", false]], "optimizer_name (model_api.configrun attribute)": [[2, "id14", false], [2, "model_api.ConfigRun.optimizer_name", false]], "out_case_dir (model_api.configrun property)": [[2, "model_api.ConfigRun.out_case_dir", false]], "out_dir (model_api.configrun attribute)": [[2, "id15", false], [2, "model_api.ConfigRun.out_dir", false]], "output_categories (learning_model.categoricneuralnetwork property)": [[1, "learning_model.CategoricNeuralNetwork.output_categories", false]], "output_category_embeddings_nlp (learning_model.categoricneuralnetwork property)": [[1, "learning_model.CategoricNeuralNetwork.output_category_embeddings_nlp", false]], "print() (model_api.configrun method)": [[2, "model_api.ConfigRun.print", false]], "reconfigure_loggers() (model_api.modelapi method)": [[2, "id22", false], [2, "model_api.ModelApi.reconfigure_loggers", false]], "report_dir (model_api.configrun attribute)": [[2, "model_api.ConfigRun.report_dir", false]], "report_dir (model_api.configrun property)": [[2, "id16", false]], "report_dir_name (model_api.configrun attribute)": [[2, "model_api.ConfigRun.report_dir_name", false]], "report_filename (model_api.configrun attribute)": [[2, "id17", false], [2, "model_api.ConfigRun.report_filename", false]], "save_model() (model_api.modelapi method)": [[2, "model_api.ModelApi.save_model", false]], "scheduler_plateau_mode (model_api.configrun attribute)": [[2, "id18", false], [2, "model_api.ConfigRun.scheduler_plateau_mode", false]], "scheduler_type (model_api.configrun attribute)": [[2, "id19", false], [2, "model_api.ConfigRun.scheduler_type", false]], "softmax (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork.softmax", false]], "stoptraining": [[1, "learning_model.StopTraining", false]], "test_codes.sentiment": [[5, "module-test_codes.sentiment", false]], "test_loop() (learning_model.categoricneuralnetwork method)": [[1, "id8", false], [1, "learning_model.CategoricNeuralNetwork.test_loop", false]], "to_dict() (model_api.configrun method)": [[2, "model_api.ConfigRun.to_dict", false]], "tokenizer (nlp_embedding.nlpembedding attribute)": [[4, "nlp_embedding.NlpEmbedding.tokenizer", false]], "train() (model_api.modelapi method)": [[2, "model_api.ModelApi.train", false]], "train_loop() (learning_model.categoricneuralnetwork method)": [[1, "id9", false], [1, "learning_model.CategoricNeuralNetwork.train_loop", false]], "train_nlp_embedding (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork.train_nlp_embedding", false]], "train_size (model_api.configrun attribute)": [[2, "id20", false], [2, "model_api.ConfigRun.train_size", false]], "train_targets (model_api.configrun attribute)": [[2, "id21", false], [2, "model_api.ConfigRun.train_targets", false]], "unset_device() (nlp_embedding.nlpembedding method)": [[4, "nlp_embedding.NlpEmbedding.unset_device", false]], "use_input_embedding (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork.use_input_embedding", false]], "use_output_embedding (learning_model.categoricneuralnetwork attribute)": [[1, "learning_model.CategoricNeuralNetwork.use_output_embedding", false]], "wipe_handlers() (model_api.modelapi method)": [[2, "id23", false], [2, "model_api.ModelApi.wipe_handlers", false]], "write_report() (model_api.modelapi method)": [[2, "model_api.ModelApi.write_report", false]]}, "objects": {"": [[1, 0, 0, "-", "learning_model"], [2, 0, 0, "-", "model_api"], [4, 0, 0, "-", "nlp_embedding"], [6, 0, 0, "-", "set_logger"]], "learning_model": [[1, 1, 1, "", "CategoricNeuralNetwork"], [1, 5, 1, "", "StopTraining"]], "learning_model.CategoricNeuralNetwork": [[1, 2, 1, "", "_compute_total_metrics"], [1, 2, 1, "", "_configure_input"], [1, 2, 1, "", "_configure_output"], [1, 3, 1, "", "_device"], [1, 2, 1, "", "_get_batch_loss"], [1, 2, 1, "", "_get_multi_one_hot"], [1, 2, 1, "", "_get_performance"], [1, 2, 1, "", "_initialize_weights"], [1, 3, 1, "", "_input_size"], [1, 3, 1, "", "_nlp_embedding_model"], [1, 3, 1, "", "_nlp_model_name"], [1, 3, 1, "", "_output_category_embeddings_nlp"], [1, 3, 1, "", "_output_size"], [1, 2, 1, "", "_process_batch_to_embedding"], [1, 2, 1, "", "_process_batch_to_one_hot"], [1, 3, 1, "", "_similarity_threshold"], [1, 3, 1, "", "_train_nlp_embedding"], [1, 3, 1, "", "_use_input_embedding"], [1, 3, 1, "", "_use_output_embedding"], [1, 2, 1, "id0", "add_layer"], [1, 2, 1, "", "assess_device"], [1, 2, 1, "id1", "build_neural_network"], [1, 3, 1, "", "category_mappings"], [1, 3, 1, "", "cos"], [1, 4, 1, "id2", "device"], [1, 2, 1, "id3", "evaluate"], [1, 2, 1, "id4", "execute"], [1, 2, 1, "id5", "forward"], [1, 3, 1, "", "hidden_layers"], [1, 4, 1, "", "input_categories"], [1, 4, 1, "", "input_order"], [1, 3, 1, "", "linear_relu_stack"], [1, 3, 1, "", "max_hidden_neurons"], [1, 3, 1, "", "nlp_model_name"], [1, 4, 1, "", "output_categories"], [1, 4, 1, "", "output_category_embeddings_nlp"], [1, 3, 1, "", "softmax"], [1, 2, 1, "id8", "test_loop"], [1, 2, 1, "id9", "train_loop"], [1, 3, 1, "", "train_nlp_embedding"], [1, 3, 1, "", "use_input_embedding"], [1, 3, 1, "", "use_output_embedding"]], "model_api": [[2, 1, 1, "", "ConfigRun"], [2, 1, 1, "", "ModelApi"]], "model_api.ConfigRun": [[2, 2, 1, "", "None"], [2, 3, 1, "id0", "batch_size"], [2, 3, 1, "id1", "case_name"], [2, 3, 1, "id2", "epochs"], [2, 2, 1, "", "from_dict"], [2, 3, 1, "id3", "hidden_layers"], [2, 3, 1, "id4", "learning_rate"], [2, 3, 1, "id5", "lr_decay_factor"], [2, 3, 1, "id6", "lr_decay_patience"], [2, 3, 1, "id7", "lr_decay_step"], [2, 3, 1, "id8", "lr_decay_target"], [2, 3, 1, "id9", "max_hidden_neurons"], [2, 3, 1, "id10", "model_trains_nlp_embedding"], [2, 3, 1, "id11", "model_uses_input_embedding"], [2, 3, 1, "id12", "model_uses_output_embedding"], [2, 3, 1, "id13", "nlp_model_name"], [2, 3, 1, "id14", "optimizer_name"], [2, 4, 1, "", "out_case_dir"], [2, 3, 1, "id15", "out_dir"], [2, 2, 1, "", "print"], [2, 4, 1, "id16", "report_dir"], [2, 3, 1, "", "report_dir_name"], [2, 3, 1, "id17", "report_filename"], [2, 3, 1, "id18", "scheduler_plateau_mode"], [2, 3, 1, "id19", "scheduler_type"], [2, 2, 1, "", "to_dict"], [2, 3, 1, "id20", "train_size"], [2, 3, 1, "id21", "train_targets"]], "model_api.ModelApi": [[2, 3, 1, "", "None"], [2, 2, 1, "", "build_and_train_model"], [2, 2, 1, "", "configure_dataset"], [2, 2, 1, "", "configure_default_loggers"], [2, 2, 1, "", "create_model"], [2, 2, 1, "", "get_dataloaders"], [2, 2, 1, "", "get_loss_fn"], [2, 2, 1, "", "get_optimizer"], [2, 2, 1, "", "get_scheduler"], [2, 2, 1, "", "load_model"], [2, 2, 1, "id22", "reconfigure_loggers"], [2, 2, 1, "", "save_model"], [2, 2, 1, "", "train"], [2, 2, 1, "id23", "wipe_handlers"], [2, 2, 1, "", "write_report"]], "nlp_embedding": [[4, 1, 1, "", "NlpEmbedding"]], "nlp_embedding.NlpEmbedding": [[4, 4, 1, "id0", "device"], [4, 3, 1, "", "embedding_model"], [4, 2, 1, "", "get_embedding"], [4, 3, 1, "", "tokenizer"], [4, 2, 1, "", "unset_device"]], "set_logger": [[6, 1, 1, "", "ColoredDetailedScreenHandler"], [6, 1, 1, "", "ColoredPrinterScreenHandler"], [6, 1, 1, "", "DetailedFileHandler"], [6, 1, 1, "", "DetailedScreenHandler"], [6, 1, 1, "", "Filter_name"], [6, 1, 1, "", "Formatters"], [6, 1, 1, "", "JsonFormatter"], [6, 1, 1, "", "PersistentLogHandler"], [6, 1, 1, "", "PersistentLogHandlerStructured"], [6, 1, 1, "", "PrettyScreenHandler"], [6, 1, 1, "", "PrinterScreenHandler"], [6, 1, 1, "", "SimpleScreenHandler"]], "set_logger.Filter_name": [[6, 2, 1, "", "filter"], [6, 3, 1, "", "name"]], "set_logger.Formatters": [[6, 2, 1, "", "colored_detailed_formatter"], [6, 2, 1, "", "colored_print_formatter"], [6, 2, 1, "", "colored_simple_formatter"], [6, 2, 1, "", "detailed_formatter"], [6, 2, 1, "", "json_formatter"], [6, 2, 1, "", "pretty_formatter"], [6, 2, 1, "", "print_formatter"], [6, 2, 1, "", "simple_formatter"]], "set_logger.JsonFormatter": [[6, 2, 1, "", "format"]], "test_codes": [[5, 0, 0, "-", "sentiment"]], "test_codes.sentiment": [[5, 6, 1, "", "get_data"], [5, 6, 1, "", "main"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:exception", "6": "py:function"}, "terms": {"": [1, 6], "0": 2, "001": 2, "1": 2, "10": 2, "15": 2, "2": [1, 2], "2058": 2, "32": 2, "4": [], "75": [], "8": 2, "8192": 1, "A": [1, 2, 6], "For": 1, "If": [1, 2, 4, 6], "It": [1, 4, 6], "The": [1, 2, 4, 5, 6], "These": [], "Will": 2, "_compute_total_metr": 1, "_configure_input": 1, "_configure_output": 1, "_devic": 1, "_get_batch_loss": 1, "_get_multi_one_hot": 1, "_get_perform": 1, "_initialize_weight": 1, "_input_s": 1, "_lrschedul": 2, "_nlp_embedding_model": 1, "_nlp_model_nam": 1, "_output_category_embeddings_nlp": 1, "_output_s": 1, "_process_batch_to_embed": 1, "_process_batch_to_one_hot": 1, "_similarity_threshold": 1, "_train_nlp_embed": 1, "_use_input_embed": 1, "_use_output_embed": 1, "accid": 4, "accident": 1, "accord": 6, "accuraci": 5, "across": 6, "act": 6, "activ": 1, "ad": [1, 6], "adam": 2, "adamw": 2, "add": 1, "add_activ": 1, "add_drop": 1, "add_lay": 1, "add_norm": 1, "addit": 6, "adjust": [], "after": 1, "again": 4, "against": 1, "aggreg": 2, "aggregate_output": 2, "all": [2, 6], "allow": 6, "along": 6, "also": [], "an": [1, 2, 6], "analysi": 6, "ani": 6, "api": [], "appear": 2, "append": 6, "appli": 1, "applic": [2, 6], "appropri": 6, "ar": [1, 2, 5, 6], "archiv": 6, "around": 1, "assess_devic": 1, "assur": 2, "attach": 6, "attribut": [1, 6], "attributeerror": 1, "automodel": 4, "autotoken": 4, "avail": [], "avoid": 1, "balanc": 2, "balance_training_data": 2, "base": [1, 2, 4, 6], "batch": [1, 2], "batch_siz": 2, "been": 1, "befor": [2, 6], "bias": 1, "bool": [1, 2, 6], "both": 4, "build": [1, 2], "build_and_train_model": 2, "build_neural_network": 1, "built": 1, "busi": 6, "calcul": 1, "call": [2, 6], "can": [1, 2, 4, 6], "carri": 6, "case": [1, 2], "case_nam": 2, "categor": [1, 2], "categori": 1, "categoricalneuralnetwork": 2, "categoricdataset": 2, "categoricneuralnetwork": [1, 2, 3], "category_map": 1, "chang": 1, "chatgpt": [], "chosen": 1, "chosen_categori": 1, "class": [1, 2, 4, 6], "classif": [], "classifi": 5, "classmethod": 2, "classvar": [], "clear": [], "co": 1, "code": 6, "codeberta": 2, "color": 6, "colored_detailed_formatt": 6, "colored_print_formatt": 6, "colored_simple_formatt": 6, "coloreddetailedscreenhandl": [3, 6], "coloredprinterscreenhandl": [3, 6], "column": 2, "compar": 1, "comprehens": 6, "comput": [1, 6], "concaten": 4, "concis": 6, "config": 2, "configrun": [2, 3], "configur": [1, 2, 5, 6], "configure_dataset": 2, "configure_default_logg": 2, "consid": 1, "consist": 6, "consol": 2, "contain": [1, 4], "content": 6, "context": [1, 6], "contextu": 6, "convert": 2, "correspond": 1, "cosin": 1, "coupl": 6, "creat": [1, 2, 6], "create_model": 2, "critic": 6, "crucial": 6, "custom": [1, 2, 6], "data": [1, 2, 4, 6], "dataclass": 2, "datafram": [2, 5], "dataload": [1, 2], "dataset": [1, 2, 5], "dataset_defin": [], "debug": 6, "decai": 2, "decid": 2, "decreas": 1, "default": 2, "definit": [1, 6], "delai": 6, "delimit": 6, "depth": 6, "design": [1, 6], "detail": 6, "detailed_formatt": 6, "detailedfilehandl": [3, 6], "detailedscreenhandl": [3, 6], "determin": [1, 6], "devic": [1, 4], "df": [2, 5], "dict": [1, 2], "dict_": 2, "dictionari": [1, 2, 6], "differ": [1, 2, 5, 6], "differenti": 6, "direct": 1, "directli": [], "directori": 2, "displai": 6, "distilbert": [1, 4], "distinct": 6, "distinguish": 6, "divid": [], "do": 4, "do_report": 2, "doc": 2, "document": [], "domain": 1, "done": [2, 4], "down": [], "dropout": 1, "each": [1, 6], "eas": 6, "easi": 6, "easier": [1, 6], "ebasso": 2, "either": 1, "element": [1, 4], "elimin": 2, "embed": [1, 2, 4], "embedding_model": 4, "emit": [2, 6], "encapsul": 6, "encod": 6, "end": [], "enhanc": 6, "entri": 6, "environ": 6, "epoch": 2, "equival": [], "essenti": 6, "evalu": [1, 5], "event": 6, "exactli": [], "except": [1, 6], "execut": 1, "explicit": [], "f1": [1, 2], "f1_score": 1, "f1_target": [], "factor": 2, "factori": 2, "fals": [1, 2, 6], "feedforward": [], "field": 1, "fil_dir": 2, "fil_nam": 2, "file": [2, 6], "filehandl": 6, "filenam": [2, 6], "filter": 6, "filter_nam": [3, 6], "float": [1, 2, 5], "flow": 6, "follow": 4, "format": 6, "formatexcept": 6, "formatt": [3, 6], "formattim": 6, "forward": 1, "from": [1, 2, 6], "from_dict": 2, "function": [1, 2, 4, 6], "further": 6, "futur": 6, "gener": [2, 6], "get": [2, 4], "get_data": 5, "get_dataload": 2, "get_embed": 4, "get_loss_fn": 2, "get_optim": 2, "get_schedul": 2, "getmessag": 6, "given": [1, 2, 4], "gradual": 1, "ha": 4, "hand": 2, "handl": [2, 4, 6], "handler": [2, 6], "hard": 4, "have": [1, 4], "hidden": [1, 2, 5], "hidden_lay": [1, 2], "hierarchi": 2, "high": 1, "higher": 1, "home": 2, "hot": 1, "huggingfac": 2, "i": [1, 2, 4, 5, 6], "ideal": 6, "import": [], "includ": 6, "independtli": 1, "index": 0, "inform": 6, "inherit": 6, "initi": [1, 2, 6], "inner": 1, "inp": [1, 4], "input": [1, 2, 4], "input_categori": 1, "input_column": 2, "input_ord": 1, "instanc": [1, 2, 6], "instanti": 6, "int": [1, 2, 5], "intend": 6, "intent": [], "interest": 6, "intuit": 1, "issu": 6, "its": 2, "itself": 6, "json": 6, "json_formatt": 6, "jsonformatt": [3, 6], "just": 1, "layer": [1, 2, 5], "learn": 2, "learning_model": [0, 3], "learning_r": 2, "level": [1, 6], "librari": [], "like": [], "line": 6, "linear": 1, "linear_relu_stack": 1, "list": [1, 2, 6], "live": 2, "live_report": 2, "load": 2, "load_model": 2, "loader": 1, "log": [2, 6], "logger": [2, 6], "logit": 1, "logrecord": 6, "loop": 1, "loss": [1, 2], "loss_fn": [1, 2], "low": 1, "lr_decay_factor": 2, "lr_decay_pati": 2, "lr_decay_step": 2, "lr_decay_target": 2, "lr_schedul": 2, "m": 4, "made": [], "main": 5, "make": [1, 2, 6], "manual": 4, "map": 1, "match": 6, "max": 2, "max_hidden_neuron": [1, 2], "maximum": [1, 2], "mean": 4, "messag": [2, 6], "metadata": 6, "method": 6, "metric": 1, "minim": 6, "minor": 2, "mix": 5, "mode": [1, 2, 6], "model": [1, 2, 4, 5], "model_api": [0, 3, 5], "model_nam": 4, "model_trains_nlp_embed": 2, "model_uses_input_embed": 2, "model_uses_output_embed": 2, "modelapi": [2, 3], "modul": [0, 1, 2, 4, 6], "monitor": 6, "monolabel": 1, "more": 1, "mortem": 6, "most": 6, "multi": 1, "multilabel": 1, "multipl": [1, 2], "must": 2, "n": 4, "name": [1, 2, 4, 6], "namespac": 6, "necessari": 2, "need": [2, 6], "neg": 5, "network": [1, 2], "neural": [1, 2], "neuron": [1, 2, 5], "neurons_in": 1, "neurons_out": 1, "newlin": 6, "nlp": [1, 2, 4], "nlp_embed": [0, 3], "nlp_model_nam": [1, 2], "nlpembed": [3, 4], "nn": [1, 2], "none": [1, 2, 4, 6], "normal": 1, "note": [2, 4], "number": [1, 2, 4, 5, 6], "number_lay": 1, "object": [2, 4, 6], "one": [1, 2], "onli": [2, 6], "oper": 6, "operand": 6, "optim": [1, 2, 6], "optimizer_nam": 2, "option": 2, "order": 1, "other": 1, "otherwis": [2, 6], "out": [2, 6], "out_case_dir": 2, "out_dir": 2, "outcom": 4, "outer": 1, "output": [1, 2, 4, 6], "output_categori": 1, "output_category_embeddings_nlp": 1, "output_column": 2, "oversampl": 2, "page": 0, "panda": 5, "paramet": [1, 2, 4, 5, 6], "pars": 6, "particularli": 6, "pass": 1, "path": 2, "pathlib": 2, "patienc": 2, "pd": [2, 5], "per": 1, "perform": 1, "persist": 6, "persistentloghandl": [3, 6], "persistentloghandlerstructur": [3, 6], "plain": 6, "pleas": [], "plot": 2, "pool": 4, "pooling_strategi": 4, "posit": 5, "posixpath": 2, "post": 6, "practic": 6, "precis": 1, "predict": 1, "preparatori": 6, "preprocess": 1, "pretrain": 1, "pretty_formatt": 6, "prettyscreenhandl": [3, 6], "print": 2, "print_formatt": 6, "printer": 2, "printerscreenhandl": [3, 6], "prioriti": 1, "process": [4, 6], "produc": 6, "project": 2, "properti": [1, 2, 4], "proport": 2, "provid": [2, 6], "purpos": 6, "py": [0, 3], "quick": 6, "rais": 1, "rate": 2, "read": 5, "readabl": 6, "recal": 1, "reconfigur": 2, "reconfigure_logg": 2, "record": 6, "reducelronplateau": 2, "refer": 6, "relev": 2, "report": 2, "report_dir": 2, "report_dir_nam": 2, "report_filenam": 2, "requir": 6, "respect": 2, "respons": 6, "retain": 6, "return": [1, 2, 4, 5, 6], "root": 2, "same": 1, "save": 2, "save_model": 2, "scan": 6, "scenario": 6, "schedul": 2, "scheduler_plateau_mod": 2, "scheduler_typ": 2, "score": 1, "screen": 6, "script": 5, "scroll": [], "search": 0, "see": [], "sentenc": 5, "sentiment": [3, 7], "sentiment_compact": [], "sentiment_explicit": [], "separ": 6, "set": [2, 4, 6], "set_logg": [0, 3], "sever": 6, "sgd": 2, "shape": 4, "should": [1, 6], "similar": 1, "simpl": 6, "simple_formatt": 6, "simplescreenhandl": [3, 6], "simplic": 6, "simplifi": 6, "singl": 1, "size": [1, 2, 4], "small": 2, "so": 4, "softmax": 1, "some": [2, 5], "sourc": [1, 2, 4, 5, 6], "specif": [1, 6], "specifi": [1, 6], "stand": 6, "static": [1, 6], "step": [2, 6], "steplr": 2, "stop": 1, "stoptrain": [1, 3], "storag": [], "store": [2, 6], "str": [1, 2, 4, 6], "straightforward": 6, "strategi": 4, "streamhandl": 6, "string": [1, 2, 6], "structur": 6, "suffici": [1, 6], "suitabl": 6, "support": 6, "tailor": 6, "target": 2, "task": 6, "tensor": [1, 4], "test": [1, 2, 5], "test_cod": [0, 3, 5], "test_dataload": 2, "test_loop": 1, "text": [4, 6], "tfm": 2, "thei": 2, "them": 2, "themselv": 2, "thi": [1, 2, 4, 5, 6], "those": 2, "threshold": 1, "through": [], "throughout": 2, "thu": 4, "time": [2, 6], "to_dict": 2, "token": 4, "torch": [1, 2, 4], "total": 1, "track": 6, "train": [1, 2, 4, 5], "train_dataload": 2, "train_loop": 1, "train_nlp_embed": [1, 2], "train_siz": 2, "train_target": 2, "transform": [], "true": [1, 2, 6], "tupl": [1, 2, 4], "two": [], "type": [1, 2, 4, 5, 6], "uncas": [1, 4], "uncolor": 6, "unobtrus": 6, "unset": 4, "unset_devic": 4, "up": 6, "updat": [1, 2], "us": [1, 2, 4, 5, 6], "usabl": [], "use_input_embed": [1, 2], "use_output_embed": [1, 2], "user": 2, "usestim": 6, "util": 1, "v1": 2, "valu": [1, 2, 6], "variou": 6, "vector": 1, "veri": [], "visual": 6, "want": [], "weight": [1, 2], "when": 1, "where": [1, 2, 4, 6], "whether": [1, 2], "which": [1, 2, 5, 6], "while": 6, "wipe": 2, "wipe_handl": 2, "without": 6, "work": 1, "wrapper": 1, "write": 2, "write_report": 2, "written": 2, "yield": 6, "you": []}, "titles": ["Welcome to repoclass\u2019s documentation!", "learning_model.py", "model_api.py", "Modules", "nlp_embedding.py", "sentiment.py", "set_logger.py", "test_codes.py"], "titleterms": {"": 0, "content": 0, "document": 0, "indic": 0, "learning_model": 1, "model_api": 2, "modul": 3, "nlp_embed": 4, "py": [1, 2, 4, 5, 6, 7], "repoclass": 0, "sentiment": 5, "set_logg": 6, "tabl": 0, "test_cod": 7, "welcom": 0}})